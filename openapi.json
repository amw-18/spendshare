{
  "openapi": "3.1.0",
  "info": {
    "title": "SpendShare API - Development",
    "description": "API for managing expenses, users, and groups in SpendShare.",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/users/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User Endpoint",
        "operationId": "create_user_endpoint_api_v1_users__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/search": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Search Users Endpoint",
        "description": "Search for users by username or email.\nReturns a list of users matching the query.\nAccessible to any authenticated user.",
        "operationId": "search_users_endpoint_api_v1_users_search_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRead"
                  },
                  "title": "Response Search Users Endpoint Api V1 Users Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read Current User Me Endpoint",
        "description": "Get current logged-in user.",
        "operationId": "read_current_user_me_endpoint_api_v1_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User Endpoint",
        "operationId": "read_user_endpoint_api_v1_users__user_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User Endpoint",
        "operationId": "update_user_endpoint_api_v1_users__user_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User Endpoint",
        "operationId": "delete_user_endpoint_api_v1_users__user_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Delete User Endpoint Api V1 Users  User Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/token": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Login For Access Token",
        "operationId": "login_for_access_token_api_v1_users_token_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_for_access_token_api_v1_users_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Create Group Endpoint",
        "operationId": "create_group_endpoint_api_v1_groups__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Read Groups Endpoint",
        "operationId": "read_groups_endpoint_api_v1_groups__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupRead"
                  },
                  "title": "Response Read Groups Endpoint Api V1 Groups  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Read Group Endpoint",
        "operationId": "read_group_endpoint_api_v1_groups__group_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "groups"
        ],
        "summary": "Update Group Endpoint",
        "operationId": "update_group_endpoint_api_v1_groups__group_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "groups"
        ],
        "summary": "Delete Group Endpoint",
        "operationId": "delete_group_endpoint_api_v1_groups__group_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Delete Group Endpoint Api V1 Groups  Group Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/members/{user_id}": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add Group Member Endpoint",
        "operationId": "add_group_member_endpoint_api_v1_groups__group_id__members__user_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "groups"
        ],
        "summary": "Remove Group Member Endpoint",
        "operationId": "remove_group_member_endpoint_api_v1_groups__group_id__members__user_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/service/": {
      "post": {
        "tags": [
          "expenses"
        ],
        "summary": "Create Expense With Participants Endpoint",
        "operationId": "create_expense_with_participants_endpoint_api_v1_expenses_service__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_expense_with_participants_endpoint_api_v1_expenses_service__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/expenses/": {
      "post": {
        "tags": [
          "expenses"
        ],
        "summary": "Create Expense Endpoint",
        "operationId": "create_expense_endpoint_api_v1_expenses__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "expenses"
        ],
        "summary": "Read Expenses Endpoint",
        "operationId": "read_expenses_endpoint_api_v1_expenses__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExpenseRead"
                  },
                  "title": "Response Read Expenses Endpoint Api V1 Expenses  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/{expense_id}": {
      "get": {
        "tags": [
          "expenses"
        ],
        "summary": "Read Expense Endpoint",
        "operationId": "read_expense_endpoint_api_v1_expenses__expense_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Expense Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "expenses"
        ],
        "summary": "Update Expense Endpoint",
        "operationId": "update_expense_endpoint_api_v1_expenses__expense_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Expense Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "expenses"
        ],
        "summary": "Delete Expense Endpoint",
        "operationId": "delete_expense_endpoint_api_v1_expenses__expense_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Expense Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Delete Expense Endpoint Api V1 Expenses  Expense Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/settle": {
      "post": {
        "tags": [
          "expenses"
        ],
        "summary": "Settle Expenses Endpoint",
        "description": "Settle one or more expense participations using a transaction.\nAll or none.",
        "operationId": "settle_expenses_endpoint_api_v1_expenses_settle_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettleExpensesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettlementResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/transactions/": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create Transaction",
        "description": "Create a new transaction.",
        "operationId": "create_transaction_api_v1_transactions__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionRead"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/transactions/{transaction_id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Read Transaction",
        "description": "Get a specific transaction by its ID.",
        "operationId": "read_transaction_api_v1_transactions__transaction_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionRead"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/currencies/": {
      "post": {
        "tags": [
          "Currencies"
        ],
        "summary": "Create Currency",
        "operationId": "create_currency_api_v1_currencies__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "List Currencies",
        "operationId": "list_currencies_api_v1_currencies__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyRead"
                  },
                  "title": "Response List Currencies Api V1 Currencies  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/currencies/{currency_id}": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Get Currency",
        "operationId": "get_currency_api_v1_currencies__currency_id__get",
        "parameters": [
          {
            "name": "currency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Currency Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Currencies"
        ],
        "summary": "Update Currency",
        "operationId": "update_currency_api_v1_currencies__currency_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "currency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Currency Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Currencies"
        ],
        "summary": "Delete Currency",
        "operationId": "delete_currency_api_v1_currencies__currency_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "currency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Currency Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Currency Api V1 Currencies  Currency Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/balances/me": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Get User Balances",
        "operationId": "get_user_balances_api_v1_balances_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalanceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/conversion-rates/": {
      "post": {
        "tags": [
          "Conversion Rates"
        ],
        "summary": "Create Conversion Rate",
        "operationId": "create_conversion_rate_api_v1_conversion_rates__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversionRateCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversionRateRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Conversion Rates"
        ],
        "summary": "Read Conversion Rates",
        "operationId": "read_conversion_rates_api_v1_conversion_rates__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConversionRateRead"
                  },
                  "title": "Response Read Conversion Rates Api V1 Conversion Rates  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversion-rates/latest": {
      "get": {
        "tags": [
          "Conversion Rates"
        ],
        "summary": "Read Latest Conversion Rate",
        "operationId": "read_latest_conversion_rate_api_v1_conversion_rates_latest_get",
        "parameters": [
          {
            "name": "from_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Currency code to convert from (e.g., USD)",
              "title": "From Code"
            },
            "description": "Currency code to convert from (e.g., USD)"
          },
          {
            "name": "to_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Currency code to convert to (e.g., EUR)",
              "title": "To Code"
            },
            "description": "Currency code to convert to (e.g., EUR)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversionRateRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Read Root",
        "operationId": "read_root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_create_expense_with_participants_endpoint_api_v1_expenses_service__post": {
        "properties": {
          "expense_in": {
            "$ref": "#/components/schemas/ExpenseCreate"
          },
          "participant_user_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Participant User Ids"
          }
        },
        "type": "object",
        "required": [
          "expense_in",
          "participant_user_ids"
        ],
        "title": "Body_create_expense_with_participants_endpoint_api_v1_expenses_service__post"
      },
      "Body_login_for_access_token_api_v1_users_token_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_for_access_token_api_v1_users_token_post"
      },
      "ConversionRateCreate": {
        "properties": {
          "from_currency_id": {
            "type": "integer",
            "title": "From Currency Id"
          },
          "to_currency_id": {
            "type": "integer",
            "title": "To Currency Id"
          },
          "rate": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Rate"
          }
        },
        "type": "object",
        "required": [
          "from_currency_id",
          "to_currency_id",
          "rate"
        ],
        "title": "ConversionRateCreate"
      },
      "ConversionRateRead": {
        "properties": {
          "from_currency_id": {
            "type": "integer",
            "title": "From Currency Id"
          },
          "to_currency_id": {
            "type": "integer",
            "title": "To Currency Id"
          },
          "rate": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Rate"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "from_currency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CurrencyRead"
              },
              {
                "type": "null"
              }
            ]
          },
          "to_currency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CurrencyRead"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "from_currency_id",
          "to_currency_id",
          "rate",
          "id",
          "timestamp"
        ],
        "title": "ConversionRateRead"
      },
      "CurrencyBalance": {
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/CurrencyRead"
          },
          "total_paid": {
            "type": "number",
            "title": "Total Paid",
            "default": 0.0
          },
          "net_owed_to_user": {
            "type": "number",
            "title": "Net Owed To User",
            "default": 0.0
          },
          "net_user_owes": {
            "type": "number",
            "title": "Net User Owes",
            "default": 0.0
          }
        },
        "type": "object",
        "required": [
          "currency"
        ],
        "title": "CurrencyBalance"
      },
      "CurrencyCreate": {
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "symbol": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Symbol"
          }
        },
        "type": "object",
        "required": [
          "code",
          "name"
        ],
        "title": "CurrencyCreate"
      },
      "CurrencyRead": {
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "symbol": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Symbol"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "code",
          "name",
          "id"
        ],
        "title": "CurrencyRead"
      },
      "CurrencyUpdate": {
        "properties": {
          "code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "symbol": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Symbol"
          }
        },
        "type": "object",
        "title": "CurrencyUpdate"
      },
      "ExpenseCreate": {
        "properties": {
          "description": {
            "type": "string",
            "minLength": 1,
            "title": "Description"
          },
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount"
          },
          "currency_id": {
            "type": "integer",
            "title": "Currency Id"
          },
          "group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id"
          }
        },
        "type": "object",
        "required": [
          "description",
          "amount",
          "currency_id"
        ],
        "title": "ExpenseCreate"
      },
      "ExpenseParticipantReadWithUser": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "expense_id": {
            "type": "integer",
            "title": "Expense Id"
          },
          "share_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Amount"
          },
          "user": {
            "$ref": "#/components/schemas/UserRead"
          },
          "settled_transaction_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settled Transaction Id"
          },
          "settled_amount_in_transaction_currency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settled Amount In Transaction Currency"
          },
          "settled_currency_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settled Currency Id"
          },
          "settled_currency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CurrencyRead"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "expense_id",
          "share_amount",
          "user"
        ],
        "title": "ExpenseParticipantReadWithUser"
      },
      "ExpenseParticipantSettlementInfo": {
        "properties": {
          "expense_participant_id": {
            "type": "integer",
            "title": "Expense Participant Id"
          },
          "settled_amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Settled Amount"
          },
          "settled_currency_id": {
            "type": "integer",
            "title": "Settled Currency Id"
          }
        },
        "type": "object",
        "required": [
          "expense_participant_id",
          "settled_amount",
          "settled_currency_id"
        ],
        "title": "ExpenseParticipantSettlementInfo"
      },
      "ExpenseRead": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount"
          },
          "currency_id": {
            "type": "integer",
            "title": "Currency Id"
          },
          "group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "paid_by_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paid By User Id"
          },
          "paid_by_user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRead"
              },
              {
                "type": "null"
              }
            ]
          },
          "currency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CurrencyRead"
              },
              {
                "type": "null"
              }
            ]
          },
          "participant_details": {
            "items": {
              "$ref": "#/components/schemas/ExpenseParticipantReadWithUser"
            },
            "type": "array",
            "title": "Participant Details",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "amount",
          "currency_id",
          "id",
          "date"
        ],
        "title": "ExpenseRead"
      },
      "ExpenseUpdate": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount"
          },
          "paid_by_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paid By User Id"
          },
          "group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id"
          },
          "currency_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Id"
          },
          "participants": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ParticipantUpdate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Participants"
          }
        },
        "type": "object",
        "title": "ExpenseUpdate"
      },
      "GroupCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "GroupCreate"
      },
      "GroupRead": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_by_user_id": {
            "type": "integer",
            "title": "Created By User Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_by_user_id"
        ],
        "title": "GroupRead"
      },
      "GroupUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "GroupUpdate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ParticipantUpdate": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "share_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Amount"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "ParticipantUpdate"
      },
      "SettleExpensesRequest": {
        "properties": {
          "transaction_id": {
            "type": "integer",
            "title": "Transaction Id"
          },
          "settlements": {
            "items": {
              "$ref": "#/components/schemas/ExpenseParticipantSettlementInfo"
            },
            "type": "array",
            "title": "Settlements"
          }
        },
        "type": "object",
        "required": [
          "transaction_id",
          "settlements"
        ],
        "title": "SettleExpensesRequest"
      },
      "SettlementResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "updated_expense_participations": {
            "items": {
              "$ref": "#/components/schemas/SettlementResultItem"
            },
            "type": "array",
            "title": "Updated Expense Participations"
          }
        },
        "type": "object",
        "required": [
          "status",
          "updated_expense_participations"
        ],
        "title": "SettlementResponse"
      },
      "SettlementResultItem": {
        "properties": {
          "expense_participant_id": {
            "type": "integer",
            "title": "Expense Participant Id"
          },
          "settled_transaction_id": {
            "type": "integer",
            "title": "Settled Transaction Id"
          },
          "settled_amount_in_transaction_currency": {
            "type": "number",
            "title": "Settled Amount In Transaction Currency"
          },
          "settled_currency_id": {
            "type": "integer",
            "title": "Settled Currency Id"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "expense_participant_id",
          "settled_transaction_id",
          "settled_amount_in_transaction_currency",
          "settled_currency_id"
        ],
        "title": "SettlementResultItem"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "Token"
      },
      "TransactionCreate": {
        "properties": {
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount"
          },
          "currency_id": {
            "type": "integer",
            "title": "Currency Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "currency_id"
        ],
        "title": "TransactionCreate"
      },
      "TransactionRead": {
        "properties": {
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount"
          },
          "currency_id": {
            "type": "integer",
            "title": "Currency Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "created_by_user_id": {
            "type": "integer",
            "title": "Created By User Id"
          },
          "currency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CurrencyRead"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "amount",
          "currency_id",
          "id",
          "timestamp",
          "created_by_user_id"
        ],
        "title": "TransactionRead"
      },
      "UserBalanceResponse": {
        "properties": {
          "balances": {
            "items": {
              "$ref": "#/components/schemas/CurrencyBalance"
            },
            "type": "array",
            "title": "Balances"
          }
        },
        "type": "object",
        "required": [
          "balances"
        ],
        "title": "UserBalanceResponse"
      },
      "UserCreate": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserRead": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "id"
        ],
        "title": "UserRead"
      },
      "UserUpdate": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "password": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/users/token"
          }
        }
      }
    }
  }
}
